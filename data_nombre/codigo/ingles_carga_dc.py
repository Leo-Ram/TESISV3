# -*- coding: utf-8 -*-
"""ingles-carga-dc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15FAKGbGsNXdb-XrZMVf1ivs-FVKAbLAv
"""

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
from matplotlib.dates import AutoDateLocator
from matplotlib.dates import HourLocator
from matplotlib.dates import MinuteLocator
from datetime import datetime, timedelta
from pandas import json_normalize
import seaborn as sns
import numpy as np

direccion = "/content/fuenteDC"

nameColumn = ["VF", "IF", "VB", "IB", "VC", "IC", "TIME"]
df = pd.read_csv(direccion+".txt",delimiter=',',names=nameColumn)


# Convertir la columna TIME a datetime
df['TIME'] = pd.to_datetime(df['TIME'])

# Corriente miliamperios  a Amperios
df["IF"] = df["IF"] / 1000
df["IB"] = df["IB"] / 1000
df["IC"] = -df["IC"] / 1000


# Calcular las potencias
df["PVF"] = df["VF"] * df['IF']
df["PVB"] = df["VB"] * df['IB']
df["PVC"] = df["VC"] * df["IC"]

plt.figure(figsize=(12, 5))
plt.plot(df['TIME'], df['VC'], label='Load',color="green")
plt.ylabel('Voltage [V]', fontsize=18, labelpad=20)
plt.xlabel('Time [DD-HH-MM]', fontsize=18)

ax = plt.gca()
ax.xaxis.set_major_locator(MinuteLocator(interval=5))

plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d-%H-%M'))
plt.xticks(rotation=45)
plt.tight_layout()
plt.tick_params(axis='both', which='major', labelsize=14)

plt.legend(fontsize=14, loc='lower center', bbox_to_anchor=(0.5, -0.45), ncol=1)

plt.grid(True)

plt.savefig('Load-DC', format='eps', bbox_inches='tight')
plt.show()

plt.figure(figsize=(12, 5))
plt.plot(df['TIME'], df['IF'], label='Source',color="blue")
plt.plot(df['TIME'], df['IB'], label='Batteries',color="orange")
plt.plot(df['TIME'], df['IC'], label='Load',color="green")
plt.ylabel('Current [A]', fontsize=18,labelpad=20)
plt.xlabel('Time [DD-HH-MM]', fontsize=18)

ax = plt.gca()
ax.xaxis.set_major_locator(MinuteLocator(interval=5))

plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d-%H-%M'))
plt.xticks(rotation=45)
plt.tight_layout()
plt.tick_params(axis='both', which='major', labelsize=14)

plt.legend(fontsize=14, loc='lower center', bbox_to_anchor=(0.5, -0.45), ncol=3)

plt.grid(True)

plt.savefig('Current-DC', format='eps', bbox_inches='tight')
plt.show()

plt.figure(figsize=(12, 5))
plt.plot(df['TIME'], df['PVF'], label='Source',color="blue")
plt.plot(df['TIME'], df['PVB'], label='Batteries', color="orange")
plt.plot(df['TIME'], df['PVC'], label='Load',color="green")
plt.ylabel('Power [W]', fontsize=18, labelpad=20)
plt.xlabel('Time [DD-HH-MM]', fontsize=18)

ax = plt.gca()
ax.xaxis.set_major_locator(MinuteLocator(interval=5))

plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%d-%H-%M'))
plt.xticks(rotation=45)
plt.tight_layout()
plt.tick_params(axis='both', which='major', labelsize=14)

plt.legend(fontsize=14,  loc='lower center', bbox_to_anchor=(0.5, -0.45), ncol=3)

plt.grid(True)

plt.savefig('Power-DC', format='eps', bbox_inches='tight')
plt.show()